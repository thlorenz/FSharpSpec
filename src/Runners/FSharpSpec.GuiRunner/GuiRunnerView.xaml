<UserControl xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:local="clr-namespace:FSharpSpec.GuiRunner;assembly=FSharpSpec.GuiRunner">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="ExpressionDark.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

            <Style x:Key="GridSplitterPreviewStyle">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Vertical_GridSplitter" TargetType="{x:Type GridSplitter}">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="VerticalAlignment" Value="Stretch" />
                <Setter Property="HorizontalAlignment" Value="Center" />
                <Setter Property="MinWidth" Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridSplitter}">
                            <Grid>
                                <Border SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                                <Grid Margin="{TemplateBinding Padding}">
                                    <StackPanel Orientation="Vertical" VerticalAlignment="Center">
                                        <Ellipse Width="4" Height="4" Fill="Gray" Stroke="Black" Margin="0,2" />
                                        <Ellipse Width="4" Height="4" Fill="Gray" Stroke="Black" Margin="0,2" />
                                        <Ellipse Width="5" Height="5" Fill="Gray" Stroke="Black" Margin="0,2" />
                                        <Ellipse Width="4" Height="4" Fill="Gray" Stroke="Black" Margin="0,2" />
                                        <Ellipse Width="4" Height="4" Fill="Gray" Stroke="Black" Margin="0,2" />
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="Horizontal_GridSplitter" TargetType="{x:Type GridSplitter}">
                <Setter Property="Background" Value="LightGray" />
                <Setter Property="BorderBrush" Value="Gray" />
                <Setter Property="PreviewStyle" Value="{StaticResource GridSplitterPreviewStyle}" />
                <Setter Property="BorderThickness" Value="0,1" />
                <Setter Property="HorizontalAlignment" Value="Stretch" />
                <Setter Property="MinHeight" Value="8" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type GridSplitter}">
                            <Grid>
                                <Border SnapsToDevicePixels="True" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" />
                                <Grid Margin="{TemplateBinding Padding}">
                                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                        <Ellipse Width="4" Height="4" Fill="Gray" Stroke="Black" Margin="2,0" />
                                        <Ellipse Width="4" Height="4" Fill="Gray" Stroke="Black" Margin="2,0" />
                                        <Ellipse Width="5" Height="5" Fill="Gray" Stroke="Black" Margin="2,0" />
                                        <Ellipse Width="4" Height="4" Fill="Gray" Stroke="Black" Margin="2,0" />
                                        <Ellipse Width="4" Height="4" Fill="Gray" Stroke="Black" Margin="2,0" />
                                    </StackPanel>
                                </Grid>
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="{x:Type TreeViewItem}" BasedOn="{StaticResource {x:Type TreeViewItem}}">
                <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
                <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                <Setter Property="FontWeight" Value="Normal" />
            </Style>
            <Style x:Key="Image_SpecState" TargetType="Image">
                <Setter Property="Width" Value="15" />
                <Setter Property="Height" Value="15" />
                <Setter Property="Margin" Value="3" />
                <Setter Property="Source" Value="NotRunYet.png" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding State}" Value="{x:Static local:SpecState.Passed}">
                        <Setter Property="Source" Value="Passed.png" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding State}" Value="{x:Static local:SpecState.Failed}">
                        <Setter Property="Source" Value="Failed.png" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding State}" Value="{x:Static local:SpecState.Pending}">
                        <Setter Property="Source" Value="Pending.png" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding State}" Value="{x:Static local:SpecState.Inconclusive}">
                        <Setter Property="Source" Value="Inconclusive.png" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="Button_RunSpecs" TargetType="Button">
                <Setter Property="Margin" Value="3" />
                <Setter Property="IsTabStop" Value="False" />
                <Setter Property="IsDefault" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate>
                            <Image Source="Run.png" Width="15" Height="15" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="TextBlock_SpecName" TargetType="TextBlock">
                <Setter Property="Text" Value="{Binding Name}" />
            </Style>

            <Style x:Key="SpecsRunProgressBar" TargetType="{x:Type ProgressBar}" BasedOn="{StaticResource {x:Type ProgressBar}}">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ProgressBar}">
                            <ControlTemplate.Resources>
                                <Storyboard x:Key="ValueChangedOn">
                                    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="PART_Track" Storyboard.TargetProperty="(UIElement.BitmapEffect).(OuterGlowBitmapEffect.Opacity)">
                                        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0" />
                                        <SplineDoubleKeyFrame KeyTime="00:00:00.2000000" Value="1" />
                                        <SplineDoubleKeyFrame KeyTime="00:00:02" Value="0" />
                                    </DoubleAnimationUsingKeyFrames>
                                </Storyboard>
                            </ControlTemplate.Resources>
                            <Grid>
                                <Border x:Name="PART_Track" BorderBrush="{DynamicResource SolidBorderBrush}" BorderThickness="1" CornerRadius="0,0,0,0" Background="{DynamicResource LightBrush}">
                                    <Border.BitmapEffect>
                                        <OuterGlowBitmapEffect Opacity="0" GlowColor="{DynamicResource WhiteColor}" GlowSize="3" />
                                    </Border.BitmapEffect>
                                </Border>
                                <Border HorizontalAlignment="Left" x:Name="PART_Indicator" BorderBrush="{DynamicResource NormalBorderBrush}" BorderThickness="1" CornerRadius="0,0,0,0">
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Setter Property="Background" Value="Transparent" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding OverallState}" Value="{x:Static local:SpecState.Passed}">
                                                    <Setter Property="Background" Value="Green" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding OverallState}" Value="{x:Static local:SpecState.Inconclusive}">
                                                    <Setter Property="Background" Value="Orange" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding OverallState}" Value="{x:Static local:SpecState.Failed}">
                                                    <Setter Property="Background" Value="DarkRed" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                                <Border Background="{DynamicResource DisabledBackgroundBrush}" Opacity="0" BorderThickness="1,1,1,1" BorderBrush="{DynamicResource DisabledBorderBrush}" x:Name="border" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" TargetName="border" Value="0.8" />
                                </Trigger>
                                <EventTrigger RoutedEvent="RangeBase.ValueChanged">
                                    <BeginStoryboard Storyboard="{StaticResource ValueChangedOn}" />
                                </EventTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
        </ResourceDictionary>
    </UserControl.Resources>
    <DockPanel LastChildFill="True">
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="File">
                <MenuItem Header="Add Assembly" Command="{Binding AddAssemblyCommand}" />
            </MenuItem>
        </Menu>

        <Grid DockPanel.Dock="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Grid.Column="0" Orientation="Horizontal">
                <Button Command="{Binding ReloadAssembliesCommand}" Content="Reload Assemblies" Height="30" Margin="2" Padding="2"/>
                <Button Command="{Binding RunAllSpecsCommand}" Height="30" Margin="2">
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="Run All" Margin="5,2" VerticalAlignment="Center" />
                        <Image Source="Run.png" Width="25" Height="25" Margin="5,2" />
                    </StackPanel>
                </Button>
            </StackPanel>
            <StackPanel Grid.Column="1" Margin="5,2">
                <ProgressBar Style="{DynamicResource SpecsRunProgressBar}" Margin="5" Minimum="0" Maximum="{Binding RegisteredSpecs}" Value="{Binding FinishedSpecs}" HorizontalAlignment="Stretch" Height="15" />
                <UniformGrid Columns="5">
                    <TextBlock Grid.Column="0">
                        <TextBlock.Text>
                            <MultiBinding StringFormat="Finished: {0}/{1}">
                                <Binding Path="FinishedSpecs" />
                                <Binding Path="RegisteredSpecs" />
                            </MultiBinding>
                        </TextBlock.Text>
                    </TextBlock>
                    <TextBlock Grid.Column="1" Text="{Binding PassedSpecs, StringFormat=Passed: {0}}" />
                    <TextBlock Grid.Column="2" Text="{Binding PendingSpecs, StringFormat=Pending: {0}}" />
                    <TextBlock Grid.Column="3" Text="{Binding InconclusiveSpecs, StringFormat=Inclonclusive: {0}}" />
                    <TextBlock Grid.Column="4" Text="{Binding FailedSpecs, StringFormat=Failed: {0}}" />
                </UniformGrid>
            </StackPanel>
        </Grid>

        <Grid DockPanel.Dock="Bottom">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="200" />
                <ColumnDefinition Width="8" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Border Grid.Column="0" Padding="5" BorderBrush="Gray" BorderThickness="2">
                <TreeView DataContext="{Binding Root}" ItemsSource="{Binding Children}">
                    <TreeView.Resources>

                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type local:AssembliesViewModel}" />

                        <HierarchicalDataTemplate ItemsSource="{Binding Child.Children}" DataType="{x:Type local:AssemblyViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <Image Style="{StaticResource Image_SpecState}" />
                                <Button Style="{StaticResource Button_RunSpecs}" Command="{Binding RunSpecsCommand}" />
                                <TextBlock Style="{StaticResource TextBlock_SpecName}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type local:ContextViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <Image Style="{StaticResource Image_SpecState}" />
                                <Button Style="{StaticResource Button_RunSpecs}" Command="{Binding RunSpecsCommand}" />
                                <TextBlock Style="{StaticResource TextBlock_SpecName}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate ItemsSource="{Binding Children}" DataType="{x:Type local:SpecContainerViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <Image Style="{StaticResource Image_SpecState}" />
                                <Button Style="{StaticResource Button_RunSpecs}" Command="{Binding RunSpecsCommand}" />
                                <TextBlock Style="{StaticResource TextBlock_SpecName}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>

                        <HierarchicalDataTemplate DataType="{x:Type local:SpecViewModel}">
                            <StackPanel Orientation="Horizontal">
                                <Image Style="{StaticResource Image_SpecState}" />
                                <Button Style="{StaticResource Button_RunSpecs}" Command="{Binding RunSpecCommand}" />
                                <Button Style="{StaticResource Button_RunSpecs}" Command="{Binding DebugSpecCommand}">
                                    <Button.Template>
                                        <ControlTemplate>
                                            <Image Source="Debug.png" Width="15" Height="15" />
                                        </ControlTemplate>
                                    </Button.Template>
                                </Button>
                                <TextBlock Style="{StaticResource TextBlock_SpecName}" />
                            </StackPanel>
                        </HierarchicalDataTemplate>
                    </TreeView.Resources>
                </TreeView>
            </Border>
            <GridSplitter Grid.Column="1" Style="{StaticResource Vertical_GridSplitter}" />
            <Grid Grid.Column="2">
                <Grid.RowDefinitions>
                    <RowDefinition Height="4*" />
                    <RowDefinition Height="8" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <ListBox Grid.Row="0" ItemsSource="{Binding SpecsRunResults}" SelectedItem="{Binding SelectedResult}" ScrollViewer.CanContentScroll="False">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <TextBlock Text="{Binding FullSpecName}" TextWrapping="Wrap" FontWeight="Bold" FontSize="12" Foreground="Yellow" />
                                <TextBlock Text="{Binding StateDisplay}">
                            <TextBlock.Style>
                                <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
                                    <Setter Property="FontWeight" Value="Normal" />
                                    <Setter Property="FontSize" Value="14" />
                                    <Setter Property="Foreground" Value="AntiqueWhite" />
                                    <Style.Triggers>
                                       <DataTrigger Binding="{Binding State}" Value="{x:Static local:SpecState.Passed}">
                                            <Setter Property="Foreground" Value="LightGreen" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static local:SpecState.Failed}">
                                            <Setter Property="Foreground" Value="Red" />
                                            <Setter Property="FontWeight" Value="Bold" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static local:SpecState.Pending}">
                                            <Setter Property="Foreground" Value="Yellow" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static local:SpecState.Inconclusive}">
                                            <Setter Property="Foreground" Value="LightBlue" />
                                        </DataTrigger> 
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                                </TextBlock>
                                <TextBlock Text="{Binding ExceptionMessage}" TextWrapping="Wrap" FontSize="12" Foreground="White" />
                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <GridSplitter Grid.Row="1" Style="{StaticResource Horizontal_GridSplitter}" HorizontalAlignment="Stretch" />
                <Border Grid.Row="2" Padding="5" BorderBrush="Gray" BorderThickness="2">
                    <ScrollViewer>
                        <StackPanel DataContext="{Binding SelectedResult}">
                            <TextBlock Text="{Binding FullSpecName}" FontWeight="Bold" TextWrapping="Wrap" />
                            <TextBlock Text="{Binding StateDisplay, StringFormat=Result: {0}}" FontStyle="Italic" />
                            <TextBlock Text="{Binding ExceptionMessage, StringFormat=Exception: {0}}" FontWeight="Bold" Margin="0,5,0,0">
                            <TextBlock.Style>
                               <Style TargetType="TextBlock">
                                    <Setter Property="Visibility" Value="Hidden" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static local:SpecState.Inconclusive}">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding State}" Value="{x:Static local:SpecState.Failed}">
                                            <Setter Property="Visibility" Value="Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                            </TextBlock>
                            <TextBlock Text="{Binding FullException}" TextWrapping="Wrap" />
                        </StackPanel>
                    </ScrollViewer>
                </Border>
            </Grid>
        </Grid>
    </DockPanel>
</UserControl>

